name: Laravel CI

on:
  push:
  pull_request:

jobs:
  laravel-tests:
    name: Testes e Qualidade (PHP ${{ matrix.php-versions }} | Node ${{ matrix.node-version }})
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        php-versions: ['8.2']
        node-version: ['20.x']

    steps:
    - name: Checkout código
      uses: actions/checkout@v4

    - name: Setup PHP v${{ matrix.php-versions }}
      uses: shivammathur/setup-php@v2
      with:
        php-version: ${{ matrix.php-versions }}
        extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite, bcmath, soap, intl, gd, exif, iconv
        coverage: none

    - name: Setup Node.js v${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'

    - name: Cache Dependências Composer
      uses: actions/cache@v4
      with:
        path: vendor
        key: ${{ runner.os }}-php-${{ matrix.php-versions }}-composer-${{ hashFiles('**/composer.lock') }}
        restore-keys: |
          ${{ runner.os }}-php-${{ matrix.php-versions }}-composer-

    - name: Instalar Dependências Composer
      run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist

    - name: Instalar Dependências NPM
      run: npm ci

    - name: Preparar Ambiente Laravel
      run: |
        php -r "file_exists('.env') || copy('.env.example', '.env');"
        php artisan key:generate
        chmod -R 777 storage bootstrap/cache

    - name: Preparar Banco de Dados de Teste (PHPUnit - SQLite)
      run: |
        mkdir -p database
        touch database/database.sqlite
    - name: Executar Migrations (PHPUnit)
      env:
        DB_CONNECTION: sqlite
        DB_DATABASE: database/database.sqlite
      run: php artisan migrate --env=testing --force

    - name: Verificar Estilo de Código PHP (Pint)
      run: vendor/bin/pint --test

    - name: Executar Análise Estática PHP (Larastan)
      run: vendor/bin/phpstan analyse --memory-limit=2G

    - name: Compilar Assets Frontend (Vite)
      run: npm run build

    - name: Executar Testes PHPUnit
      env:
        DB_CONNECTION: sqlite
        DB_DATABASE: database/database.sqlite
      run: php artisan test --env=testing

    - name: Executar Testes de Browser (Dusk)
      run: |
        sudo apt-get update
        sudo apt-get install -y libnss3 libatk1.0-0 libatk-bridge2.0-0 libcups2 libgtk-3-0 libgbm-dev libasound2t64 xvfb
        cp .env.dusk.ci .env.dusk
        mkdir -p database/testing
        touch database/testing/dusk.sqlite
        php artisan migrate --database=sqlite --path=database/migrations --env=dusk.local --force
        php artisan dusk:chrome-driver --detect --no-interaction
        php artisan serve --port=8000 --env=dusk.local &
        echo "Aguardando servidor da aplicação iniciar..."
        sleep 8
        ./vendor/laravel/dusk/bin/chromedriver-linux --port=9515 &
        echo "Aguardando ChromeDriver iniciar..."
        sleep 8
        php artisan dusk --env=dusk.local

    - name: Upload Artefatos Dusk (em caso de falha)
      if: failure()
      uses: actions/upload-artifact@v4
      with:
        name: dusk-failures-${{ github.run_id }}
        path: |
          tests/Browser/screenshots/failure-*.*
          tests/Browser/console/*.log
        retention-days: 7