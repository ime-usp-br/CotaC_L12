name: Laravel CI

on:
  push:
  pull_request:

jobs:
  laravel-tests:
    name: Testes e Qualidade (PHP ${{ matrix.php-versions }} | Node ${{ matrix.node-version }})
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        php-versions: ['8.2']
        node-version: ['20.x']

    steps:
    - name: Checkout código
      uses: actions/checkout@v4

    - name: Setup PHP v${{ matrix.php-versions }}
      uses: shivammathur/setup-php@v2
      with:
        php-version: ${{ matrix.php-versions }}
        extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite, bcmath, soap, intl, gd, exif, iconv
        coverage: none

    - name: Setup Node.js v${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'

    - name: Cache Dependências Composer
      uses: actions/cache@v4
      with:
        path: vendor
        key: ${{ runner.os }}-php-${{ matrix.php-versions }}-composer-${{ hashFiles('**/composer.lock') }}
        restore-keys: |
          ${{ runner.os }}-php-${{ matrix.php-versions }}-composer-

    - name: Instalar Dependências Composer
      run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist

    - name: Instalar Dependências NPM
      run: npm ci

    - name: Preparar Ambiente Laravel
      run: |
        php -r "file_exists('.env') || copy('.env.example', '.env');"
        php artisan key:generate
        chmod -R 777 storage bootstrap/cache

    - name: Preparar Banco de Dados de Teste (PHPUnit - SQLite)
      run: |
        mkdir -p database
        touch database/database.sqlite
    - name: Executar Migrations (PHPUnit)
      env:
        DB_CONNECTION: sqlite
        DB_DATABASE: database/database.sqlite
      run: php artisan migrate --env=testing --force

    - name: Verificar Estilo de Código PHP (Pint)
      run: vendor/bin/pint --test

    - name: Executar Análise Estática PHP (Larastan)
      run: vendor/bin/phpstan analyse --memory-limit=2G

    - name: Compilar Assets Frontend (Vite)
      run: npm run build

    - name: Executar Testes PHPUnit
      env:
        DB_CONNECTION: sqlite
        DB_DATABASE: database/database.sqlite
      run: php artisan test --env=testing